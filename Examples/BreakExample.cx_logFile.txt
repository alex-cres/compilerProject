
READING FROM : ..\Examples\BreakExample.cx
WRITING TO : ..\Examples\BreakExample.cx_logFile.txt

Token:	083 --> RESERVED_COMMENT              	Lex:	Comment(This is not Executed)
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <INSTRUCTION>
Token:	012 --> IDN_NUMBER                    	Lex:	N
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <DECLARATION>
Token:	011 --> IDENTIFIER                    	Lex:	a
Entering <DECLAREEXP>
Token:	030 --> OP_ATTRIBUTION                	Lex:	<<
Token:	018 --> LITERAL_NUMBER                	Lex:	0
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Exiting <DECLAREEXP>
Exiting <DECLARATION>
Exiting <INSTRUCTION>
Token:	075 --> RESERVED_LOOP                 	Lex:	Loop
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <LOOPER>
Token:	028 --> OPEN_PARENTESIS               	Lex:	(
Token:	018 --> LITERAL_NUMBER                	Lex:	5
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	029 --> CLOSE_PARENTESIS              	Lex:	)
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Token:	004 --> POINT                         	Lex:	.
Token:	076 --> RESERVED_DO                   	Lex:	Do
Token:	028 --> OPEN_PARENTESIS               	Lex:	(
Token:	083 --> RESERVED_COMMENT              	Lex:	Comment(This is not Executed)
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <INSTRUCTION>
Token:	011 --> IDENTIFIER                    	Lex:	a
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <ATTRIBUTION>
Token:	030 --> OP_ATTRIBUTION                	Lex:	<<
Token:	011 --> IDENTIFIER                    	Lex:	a
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	032 --> OP_ADD                        	Lex:	+
Exiting <FACTOR>
Exiting <TERM>
Token:	018 --> LITERAL_NUMBER                	Lex:	1
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Exiting <EXP>
Exiting <ATTRIBUTION>
Exiting <INSTRUCTION>
Token:	085 --> RESERVED_BREAK                	Lex:	Break
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <BREAK>
Token:	028 --> OPEN_PARENTESIS               	Lex:	(
Token:	029 --> CLOSE_PARENTESIS              	Lex:	)
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <BREAK>
Exiting <INSTRUCTION>
Token:	029 --> CLOSE_PARENTESIS              	Lex:	)
Exiting <INSTRUCTIONLIST>
Exiting <INSTRUCTIONLIST>
Exiting <INSTRUCTIONLIST>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <LOOPER>
Exiting <INSTRUCTION>
Token:	078 --> RESERVED_ON                   	Lex:	On
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <ON>
Token:	004 --> POINT                         	Lex:	.
Token:	079 --> RESERVED_CONSOLE              	Lex:	Console
Token:	028 --> OPEN_PARENTESIS               	Lex:	(
Token:	093 --> RESERVED_CAST_STRING          	Lex:	ToString
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Entering <CASTINGVAR>
Token:	028 --> OPEN_PARENTESIS               	Lex:	(
Token:	011 --> IDENTIFIER                    	Lex:	a
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	029 --> CLOSE_PARENTESIS              	Lex:	)
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Token:	029 --> CLOSE_PARENTESIS              	Lex:	)
Exiting <CASTINGVAR>
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <ON>
Exiting <INSTRUCTION>
Token:	-01 --> EOF                           	Lex:	EOF
Exiting <INSTRUCTIONLIST>
Exiting <INSTRUCTIONLIST>
Exiting <INSTRUCTIONLIST>
Exiting <INSTRUCTIONLIST>

MAX_DEPTH_TREE FOUND : 15
PROGRAM
|_INSTRUCTIONLIST
  |-INSTRUCTION
  | |_Comment(This is not Executed)
  |-;
  |_INSTRUCTIONLIST
    |-INSTRUCTION
    | |_DECLARATION
    |   |-N
    |   |_DECLAREEXP
    |     |-a
    |     |-<<
    |     |_EXP
    |       |_TERM
    |         |_FACTOR
    |           |_0
    |-;
    |_INSTRUCTIONLIST
      |-INSTRUCTION
      | |_LOOPER
      |   |-Loop
      |   |-(
      |   |-EXP
      |   | |_TERM
      |   |   |_FACTOR
      |   |     |_5
      |   |-)
      |   |-.
      |   |_Do
      |     |-(
      |     |-INSTRUCTIONLIST
      |     | |-INSTRUCTION
      |     | | |_Comment(This is not Executed)
      |     | |-;
      |     | |_INSTRUCTIONLIST
      |     |   |-INSTRUCTION
      |     |   | |_ATTRIBUTION
      |     |   |   |-a
      |     |   |   |-<<
      |     |   |   |_EXP
      |     |   |     |-TERM
      |     |   |     | |_FACTOR
      |     |   |     |   |_a
      |     |   |     |-+
      |     |   |     |_EXP
      |     |   |       |_TERM
      |     |   |         |_FACTOR
      |     |   |           |_1
      |     |   |-;
      |     |   |_INSTRUCTIONLIST
      |     |     |-INSTRUCTION
      |     |     | |_BREAK
      |     |     |   |-Break
      |     |     |   |-(
      |     |     |   |_)
      |     |     |_;
      |     |_)
      |-;
      |_INSTRUCTIONLIST
        |-INSTRUCTION
        | |_ON
        |   |-On
        |   |-.
        |   |-Console
        |   |-(
        |   |-EXP
        |   | |_TERM
        |   |   |_FACTOR
        |   |     |_CASTINGVAR
        |   |       |-ToString
        |   |       |-(
        |   |       |-EXP
        |   |       | |_TERM
        |   |       |   |_FACTOR
        |   |       |     |_a
        |   |       |_)
        |   |_)
        |-;
        |_EOF
Entering PROGRAM
Entering INSTRUCTIONLIST
Entering INSTRUCTION
Entering Comment(This is not Executed)
Entering ;
Entering INSTRUCTIONLIST
Entering INSTRUCTION
Entering DECLARATION
Entering N
Exiting N
Entering DECLAREEXP
Entering a
Exiting a
Entering <<
Exiting <<
Entering EXP
Entering TERM
Entering FACTOR
Entering 0
Exiting 0
Exiting 0
Exiting 0
Exiting 0
Exiting <<
Exiting DECLARATION
Exiting DECLARATION
Entering ;
Entering INSTRUCTIONLIST
Entering INSTRUCTION
Entering LOOPER
Entering Loop
Exiting Loop
Entering (
Entering EXP
Entering TERM
Entering FACTOR
Entering 5
Exiting 5
Exiting 5
Exiting 5
Exiting 5
Entering )
Entering .
Entering Do
Entering (
Entering INSTRUCTIONLIST
Entering INSTRUCTION
Entering Comment(This is not Executed)
Entering ;
Entering INSTRUCTIONLIST
Entering INSTRUCTION
Entering ATTRIBUTION
Entering a
Exiting a
Entering <<
Exiting <<
Entering EXP
Entering TERM
Entering FACTOR
Entering a
Exiting a
Exiting a
Exiting a
Entering +
Exiting +
Entering EXP
Entering TERM
Entering FACTOR
Entering 1
Exiting 1
Exiting 1
Exiting 1
Exiting 1
Exiting +
Exiting <<
Exiting <<
Entering ;
Entering INSTRUCTIONLIST
Entering INSTRUCTION
Entering BREAK
Entering Break
Exiting Break
Entering (
Entering )
Exiting Break
Exiting Break
Entering ;
Exiting Break
Exiting INSTRUCTIONLIST
Exiting INSTRUCTIONLIST
Entering )
Exiting Do
Exiting Loop
Exiting Loop
Entering ;
Entering INSTRUCTIONLIST
Entering INSTRUCTION
Entering ON
Entering On
Exiting On
Entering .
Entering Console
Exiting Console
Entering (
Entering EXP
Entering TERM
Entering FACTOR
Entering CASTINGVAR
Entering ToString
Exiting ToString
Entering (
Entering EXP
Entering TERM
Entering FACTOR
Entering a
Exiting a
Exiting a
Exiting a
Exiting a
Entering )
Exiting ToString
Exiting ToString
Exiting ToString
Exiting ToString
Entering )
Exiting On
Exiting On
Entering ;
Entering EOF
Exiting On
Exiting INSTRUCTIONLIST
Exiting INSTRUCTIONLIST
Exiting INSTRUCTIONLIST
Exiting INSTRUCTIONLIST
INSTRUCTIONLIST
|-DECLARATION
| |-N
| |_<<
|   |-a
|   |_0
|_INSTRUCTIONLIST
  |-Loop
  | |-5
  | |_Do
  |   |_INSTRUCTIONLIST
  |     |-<<
  |     | |-a
  |     | |_+
  |     |   |-a
  |     |   |_1
  |     |_Break
  |_On
    |-Console
    |_ToString
      |_a
Optimization of INSTRUCTIONLIST
Optimization of DECLARATION
Optimization of N
End Optimization of N
Optimization of <<
Optimization of a
End Optimization of a
Optimization of 0
End Optimization of 0
End Optimization of <<
End Optimization of DECLARATION
Optimization of INSTRUCTIONLIST
Optimization of Loop
Optimization of 5
End Optimization of 5
Optimization of Do
Optimization of INSTRUCTIONLIST
Optimization of <<
Optimization of a
End Optimization of a
Optimization of +
Optimization of a
End Optimization of a
Optimization of 1
End Optimization of 1
End Optimization of +
End Optimization of <<
Optimization of Break
End Optimization of Break
End Optimization of INSTRUCTIONLIST
End Optimization of Do
End Optimization of Loop
Optimization of On
Optimization of Console
End Optimization of Console
Optimization of ToString
Optimization of a
End Optimization of a
End Optimization of ToString
End Optimization of On
End Optimization of INSTRUCTIONLIST
End Optimization of INSTRUCTIONLIST
INSTRUCTIONLIST
|-DECLARATION
| |-N
| |_<<
|   |-a
|   |_0
|_INSTRUCTIONLIST
  |-Loop
  | |-5
  | |_Do
  |   |_INSTRUCTIONLIST
  |     |-<<
  |     | |-a
  |     | |_+
  |     |   |-a
  |     |   |_1
  |     |_Break
  |_On
    |-Console
    |_ToString
      |_a
