
READING FROM : ..\Examples\ArrayUsageExample.cx
WRITING TO : ..\Examples\ArrayUsageExample.cx_logFile.txt

Token:	017 --> IDN_STRING                    	Lex:	S
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <DECLARATION>
Token:	026 --> OPEN_BRACKETS                 	Lex:	[
Entering <ARRAYDEF>
Token:	018 --> LITERAL_NUMBER                	Lex:	5
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	027 --> CLOSE_BRACKETS                	Lex:	]
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Token:	011 --> IDENTIFIER                    	Lex:	a
Exiting <ARRAYDEF>
Entering <DECLAREEXP>
Token:	030 --> OP_ATTRIBUTION                	Lex:	<<
Token:	020 --> LITERAL_STRING                	Lex:	"aula"
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Exiting <DECLAREEXP>
Exiting <DECLARATION>
Exiting <INSTRUCTION>
Token:	078 --> RESERVED_ON                   	Lex:	On
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <ON>
Token:	004 --> POINT                         	Lex:	.
Token:	079 --> RESERVED_CONSOLE              	Lex:	Console
Token:	028 --> OPEN_PARENTESIS               	Lex:	(
Token:	093 --> RESERVED_CAST_STRING          	Lex:	ToString
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Entering <CASTINGVAR>
Token:	028 --> OPEN_PARENTESIS               	Lex:	(
Token:	011 --> IDENTIFIER                    	Lex:	a
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	026 --> OPEN_BRACKETS                 	Lex:	[
Entering <ARRAYDEF>
Token:	018 --> LITERAL_NUMBER                	Lex:	0
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	027 --> CLOSE_BRACKETS                	Lex:	]
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Token:	029 --> CLOSE_PARENTESIS              	Lex:	)
Exiting <ARRAYDEF>
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Token:	029 --> CLOSE_PARENTESIS              	Lex:	)
Exiting <CASTINGVAR>
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <ON>
Exiting <INSTRUCTION>
Token:	-01 --> EOF                           	Lex:	EOF
Exiting <INSTRUCTIONLIST>
Exiting <INSTRUCTIONLIST>

MAX_DEPTH_TREE FOUND : 17
PROGRAM
|_INSTRUCTIONLIST
  |-INSTRUCTION
  | |_DECLARATION
  |   |-S
  |   | |_ARRAYDEF
  |   |   |-[
  |   |   |-EXP
  |   |   | |_TERM
  |   |   |   |_FACTOR
  |   |   |     |_5
  |   |   |_]
  |   |_DECLAREEXP
  |     |-a
  |     |-<<
  |     |_EXP
  |       |_TERM
  |         |_FACTOR
  |           |_"aula"
  |-;
  |_INSTRUCTIONLIST
    |-INSTRUCTION
    | |_ON
    |   |-On
    |   |-.
    |   |-Console
    |   |-(
    |   |-EXP
    |   | |_TERM
    |   |   |_FACTOR
    |   |     |_CASTINGVAR
    |   |       |-ToString
    |   |       |-(
    |   |       |-EXP
    |   |       | |_TERM
    |   |       |   |_FACTOR
    |   |       |     |_a
    |   |       |       |_ARRAYDEF
    |   |       |         |-[
    |   |       |         |-EXP
    |   |       |         | |_TERM
    |   |       |         |   |_FACTOR
    |   |       |         |     |_0
    |   |       |         |_]
    |   |       |_)
    |   |_)
    |-;
    |_EOF
Entering PROGRAM
Entering INSTRUCTIONLIST
Entering INSTRUCTION
Entering DECLARATION
Entering S
Entering ARRAYDEF
Entering [
Entering EXP
Entering TERM
Entering FACTOR
Entering 5
Exiting 5
Exiting 5
Exiting 5
Exiting 5
Entering ]
Exiting 5
Exiting S
Entering DECLAREEXP
Entering a
Exiting a
Entering <<
Exiting <<
Entering EXP
Entering TERM
Entering FACTOR
Entering "aula"
Exiting "aula"
Exiting "aula"
Exiting "aula"
Exiting "aula"
Exiting <<
Exiting DECLARATION
Exiting DECLARATION
Entering ;
Entering INSTRUCTIONLIST
Entering INSTRUCTION
Entering ON
Entering On
Exiting On
Entering .
Entering Console
Exiting Console
Entering (
Entering EXP
Entering TERM
Entering FACTOR
Entering CASTINGVAR
Entering ToString
Exiting ToString
Entering (
Entering EXP
Entering TERM
Entering FACTOR
Entering a
Entering ARRAYDEF
Entering [
Entering EXP
Entering TERM
Entering FACTOR
Entering 0
Exiting 0
Exiting 0
Exiting 0
Exiting 0
Entering ]
Exiting 0
Exiting a
Exiting a
Exiting a
Exiting a
Entering )
Exiting ToString
Exiting ToString
Exiting ToString
Exiting ToString
Entering )
Exiting On
Exiting On
Entering ;
Entering EOF
Exiting On
Exiting INSTRUCTIONLIST
Exiting INSTRUCTIONLIST
INSTRUCTIONLIST
|-DECLARATION
| |-S
| | |_5
| |_<<
|   |-a
|   |_"aula"
|_On
  |-Console
  |_ToString
    |_a
      |_0
