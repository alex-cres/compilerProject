
READING FROM : ..\Examples\AttributionAndWriteExample.cx
WRITING TO : ..\Examples\AttributionAndWriteExample.cx_logFile.txt

Token:	012 --> IDN_NUMBER                    	Lex:	N
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <DECLARATION>
Token:	011 --> IDENTIFIER                    	Lex:	q
Entering <DECLAREEXP>
Token:	030 --> OP_ATTRIBUTION                	Lex:	<<
Token:	018 --> LITERAL_NUMBER                	Lex:	2222
Entering <BEXP>
Entering <CEXP>
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Exiting <CEXP>
Exiting <BEXP>
Exiting <DECLAREEXP>
Exiting <DECLARATION>
Exiting <INSTRUCTION>
Token:	015 --> IDN_BOOL                      	Lex:	B
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <DECLARATION>
Token:	011 --> IDENTIFIER                    	Lex:	b
Entering <DECLAREEXP>
Token:	030 --> OP_ATTRIBUTION                	Lex:	<<
Token:	043 --> OP_NOT                        	Lex:	!
Entering <BEXP>
Token:	028 --> OPEN_PARENTESIS               	Lex:	(
Token:	018 --> LITERAL_NUMBER                	Lex:	2
Entering <BEXP>
Entering <CEXP>
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	036 --> OP_MINOR                      	Lex:	<
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Token:	011 --> IDENTIFIER                    	Lex:	q
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	029 --> CLOSE_PARENTESIS              	Lex:	)
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Exiting <CEXP>
Exiting <BEXP>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <BEXP>
Exiting <DECLAREEXP>
Exiting <DECLARATION>
Exiting <INSTRUCTION>
Token:	072 --> RESERVED_IF                   	Lex:	If
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <IF>
Token:	028 --> OPEN_PARENTESIS               	Lex:	(
Token:	011 --> IDENTIFIER                    	Lex:	b
Entering <BEXP>
Entering <CEXP>
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	029 --> CLOSE_PARENTESIS              	Lex:	)
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Exiting <CEXP>
Exiting <BEXP>
Token:	004 --> POINT                         	Lex:	.
Token:	073 --> RESERVED_THEN                 	Lex:	Then
Token:	028 --> OPEN_PARENTESIS               	Lex:	(
Token:	078 --> RESERVED_ON                   	Lex:	On
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <ON>
Token:	004 --> POINT                         	Lex:	.
Token:	079 --> RESERVED_CONSOLE              	Lex:	Console
Token:	028 --> OPEN_PARENTESIS               	Lex:	(
Token:	018 --> LITERAL_NUMBER                	Lex:	1
Entering <BEXP>
Entering <CEXP>
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	029 --> CLOSE_PARENTESIS              	Lex:	)
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Exiting <CEXP>
Exiting <BEXP>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <ON>
Exiting <INSTRUCTION>
Token:	029 --> CLOSE_PARENTESIS              	Lex:	)
Exiting <INSTRUCTIONLIST>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <IF>
Exiting <INSTRUCTION>
Token:	-01 --> EOF                           	Lex:	EOF
Exiting <INSTRUCTIONLIST>
Exiting <INSTRUCTIONLIST>
Exiting <INSTRUCTIONLIST>

MAX_DEPTH_TREE FOUND : 15
PROGRAM
|_INSTRUCTIONLIST
  |-INSTRUCTION
  | |_DECLARATION
  |   |-N
  |   |_DECLAREEXP
  |     |-q
  |     |-<<
  |     |_BEXP
  |       |_CEXP
  |         |_EXP
  |           |_TERM
  |             |_FACTOR
  |               |_2222
  |-;
  |_INSTRUCTIONLIST
    |-INSTRUCTION
    | |_DECLARATION
    |   |-B
    |   |_DECLAREEXP
    |     |-b
    |     |-<<
    |     |_BEXP
    |       |-!
    |       |-(
    |       |-BEXP
    |       | |_CEXP
    |       |   |-EXP
    |       |   | |_TERM
    |       |   |   |_FACTOR
    |       |   |     |_2
    |       |   |-<
    |       |   |_EXP
    |       |     |_TERM
    |       |       |_FACTOR
    |       |         |_q
    |       |_)
    |-;
    |_INSTRUCTIONLIST
      |-INSTRUCTION
      | |_IF
      |   |-If
      |   |-(
      |   |-BEXP
      |   | |_CEXP
      |   |   |_EXP
      |   |     |_TERM
      |   |       |_FACTOR
      |   |         |_b
      |   |-)
      |   |-.
      |   |_Then
      |     |-(
      |     |-INSTRUCTIONLIST
      |     | |-INSTRUCTION
      |     | | |_ON
      |     | |   |-On
      |     | |   |-.
      |     | |   |-Console
      |     | |   |-(
      |     | |   |-BEXP
      |     | |   | |_CEXP
      |     | |   |   |_EXP
      |     | |   |     |_TERM
      |     | |   |       |_FACTOR
      |     | |   |         |_1
      |     | |   |_)
      |     | |_;
      |     |_)
      |-;
      |_EOF
Entering PROGRAM
Entering INSTRUCTIONLIST
Entering INSTRUCTION
Entering DECLARATION
Entering N
Exiting N
Entering DECLAREEXP
Entering q
Exiting q
Entering <<
Exiting <<
Entering BEXP
Entering CEXP
Entering EXP
Entering TERM
Entering FACTOR
Entering 2222
Exiting 2222
Exiting 2222
Exiting 2222
Exiting 2222
Exiting 2222
Exiting 2222
Exiting <<
Exiting DECLARATION
Exiting DECLARATION
Entering ;
Entering INSTRUCTIONLIST
Entering INSTRUCTION
Entering DECLARATION
Entering B
Exiting B
Entering DECLAREEXP
Entering b
Exiting b
Entering <<
Exiting <<
Entering BEXP
Entering !
Exiting !
Entering (
Entering BEXP
Entering CEXP
Entering EXP
Entering TERM
Entering FACTOR
Entering 2
Exiting 2
Exiting 2
Exiting 2
Exiting 2
Entering <
Exiting <
Entering EXP
Entering TERM
Entering FACTOR
Entering q
Exiting q
Exiting q
Exiting q
Exiting q
Exiting <
Exiting <
Entering )
Exiting !
Exiting <<
Exiting DECLARATION
Exiting DECLARATION
Entering ;
Entering INSTRUCTIONLIST
Entering INSTRUCTION
Entering IF
Entering If
Exiting If
Entering (
Entering BEXP
Entering CEXP
Entering EXP
Entering TERM
Entering FACTOR
Entering b
Exiting b
Exiting b
Exiting b
Exiting b
Exiting b
Exiting b
Entering )
Entering .
Entering Then
Entering (
Entering INSTRUCTIONLIST
Entering INSTRUCTION
Entering ON
Entering On
Exiting On
Entering .
Entering Console
Exiting Console
Entering (
Entering BEXP
Entering CEXP
Entering EXP
Entering TERM
Entering FACTOR
Entering 1
Exiting 1
Exiting 1
Exiting 1
Exiting 1
Exiting 1
Exiting 1
Entering )
Exiting On
Exiting On
Entering ;
Exiting On
Entering )
Exiting Then
Exiting If
Exiting If
Entering ;
Entering EOF
Exiting If
Exiting INSTRUCTIONLIST
Exiting INSTRUCTIONLIST
Exiting INSTRUCTIONLIST
INSTRUCTIONLIST
|-DECLARATION
| |-N
| |_<<
|   |-q
|   |_2222
|_INSTRUCTIONLIST
  |-DECLARATION
  | |-B
  | |_<<
  |   |-b
  |   |_!
  |     |_<
  |       |-2
  |       |_q
  |_If
    |-b
    |_Then
      |_On
        |-Console
        |_1
Optimization of INSTRUCTIONLIST
Optimization of DECLARATION
Optimization of N
Optimization start N
End Optimization of N
Optimization of <<
Optimization of q
Optimization start q
End Optimization of q
Optimization of 2222
Optimization start 2222
End Optimization of 2222
Optimization start <<
End Optimization of <<
Optimization start DECLARATION
End Optimization of DECLARATION
Optimization of INSTRUCTIONLIST
Optimization of DECLARATION
Optimization of B
Optimization start B
End Optimization of B
Optimization of <<
Optimization of b
Optimization start b
End Optimization of b
Optimization of !
Optimization of <
Optimization of 2
Optimization start 2
End Optimization of 2
Optimization of q
Optimization start q
End Optimization of q
Optimization start <
Optimization result <
End Optimization of <
Optimization start !
Optimization result !
End Optimization of !
Optimization start <<
End Optimization of <<
Optimization start DECLARATION
End Optimization of DECLARATION
Optimization of If
Optimization of b
Optimization start b
End Optimization of b
Optimization of Then
Optimization of On
Optimization of Console
Optimization start Console
End Optimization of Console
Optimization of 1
Optimization start 1
End Optimization of 1
Optimization start On
End Optimization of On
Optimization start Then
End Optimization of Then
Optimization start If
End Optimization of If
Optimization start INSTRUCTIONLIST
End Optimization of INSTRUCTIONLIST
Optimization start INSTRUCTIONLIST
End Optimization of INSTRUCTIONLIST
INSTRUCTIONLIST
|-DECLARATION
| |-N
| |_<<
|   |-q
|   |_2222
|_INSTRUCTIONLIST
  |-DECLARATION
  | |-B
  | |_<<
  |   |-b
  |   |_!
  |     |_<
  |       |-2
  |       |_q
  |_If
    |-b
    |_Then
      |_On
        |-Console
        |_1
| Symbol | Scope 	 | Name
| 1000 	 | INSTRUCTIONLIST 	 | TABLE
| 12 	 | DECLARATION 	 | q
| 15 	 | DECLARATION 	 | b
		mov eax, 2222
		mov dword[q], eax

	q : dd 0
	t1 : dd 2
		mov eax, dword[t1]
		mov eax, dword[q]
	t2 : dd 0
		cmp eax, ebx
		jl	t2_true
		mov dword[t2],FALSE
		jmp t2_false
		t2_true:
		mov dword[t2],TRUE
		t2_false:

	t3 : dd 0
		mov eax, dword[t2]
		cmp eax, FALSE
		je t3_true
		mov dword[t3], FALSE
		jmp t3_false
		t3_true:
		mov dword[t3],TRUE
		t3_false:
		mov eax, dword[t3]
		mov dword[b], eax

	b : dd 0
	t4 : dd 0

		mov ebx, dword[b]

		mov dword[t4],ebx

		mov ebx, dword[t4]

		mov eax, TRUE

		cmp eax, ebx

		je t4_if_then

		jmp t4_if_else

		t4_if_then:
		push dword[t5]
		push formatoutnumber; push format into ESP
		call _printf; call defined function
		add esp, 8; params * 4


		jmp t4_if_end

		t4_if_else:

		t4_if_end:
Object File Created : nasm -f win32 C:\Users\Alex\Documents\GitHub\compilerProject\Compiler\..\Examples\AttributionAndWriteExample.asm
Exe File Created : gcc C:\Users\Alex\Documents\GitHub\compilerProject\Compiler\..\Examples\AttributionAndWriteExample.obj -o C:\Users\Alex\Documents\GitHub\compilerProject\Compiler\..\Examples\AttributionAndWriteExample.exe
| Symbol | Scope 	 | Name
| 1000 	 | INSTRUCTIONLIST 	 | TABLE
| 12 	 | DECLARATION 	 | q
| 15 	 | DECLARATION 	 | b
| 17 	 | INSTRUCTIONLIST 	 | stringFalse
| 17 	 | INSTRUCTIONLIST 	 | stringTrue
| 17 	 | INSTRUCTIONLIST 	 | formatoutnumber
| 17 	 | INSTRUCTIONLIST 	 | formatoutdecimal
| 17 	 | INSTRUCTIONLIST 	 | formatoutchar
| 17 	 | INSTRUCTIONLIST 	 | formatoutstring
| 17 	 | INSTRUCTIONLIST 	 | formatoutbool
| 17 	 | INSTRUCTIONLIST 	 | formatinnumber
| 17 	 | INSTRUCTIONLIST 	 | formatindecimal
| 17 	 | INSTRUCTIONLIST 	 | formatinchar
| 17 	 | INSTRUCTIONLIST 	 | formatinstring
| 17 	 | INSTRUCTIONLIST 	 | formatinbool
| 12 	 | < 	 | t1
| 15 	 | < 	 | t2
| 15 	 | ! 	 | t3
| 15 	 | If 	 | t4
