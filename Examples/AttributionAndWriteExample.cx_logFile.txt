
READING FROM : ..\Examples\AttributionAndWriteExample.cx
WRITING TO : ..\Examples\AttributionAndWriteExample.cx_logFile.txt

Token:	012 --> IDN_NUMBER                    	Lex:	N
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <DECLARATION>
Token:	011 --> IDENTIFIER                    	Lex:	a
Entering <DECLAREEXP>
Token:	030 --> OP_ATTRIBUTION                	Lex:	<<
Token:	018 --> LITERAL_NUMBER                	Lex:	0
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Exiting <DECLAREEXP>
Exiting <DECLARATION>
Exiting <INSTRUCTION>
Token:	011 --> IDENTIFIER                    	Lex:	a
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <ATTRIBUTION>
Token:	030 --> OP_ATTRIBUTION                	Lex:	<<
Token:	018 --> LITERAL_NUMBER                	Lex:	2
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	032 --> OP_ADD                        	Lex:	+
Exiting <FACTOR>
Exiting <TERM>
Token:	018 --> LITERAL_NUMBER                	Lex:	2
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	034 --> OP_MUL                        	Lex:	*
Exiting <FACTOR>
Token:	018 --> LITERAL_NUMBER                	Lex:	2
Entering <TERM>
Entering <FACTOR>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <FACTOR>
Exiting <TERM>
Exiting <TERM>
Exiting <EXP>
Exiting <EXP>
Exiting <ATTRIBUTION>
Exiting <INSTRUCTION>
Token:	011 --> IDENTIFIER                    	Lex:	a
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <ATTRIBUTION>
Token:	030 --> OP_ATTRIBUTION                	Lex:	<<
Token:	028 --> OPEN_PARENTESIS               	Lex:	(
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	018 --> LITERAL_NUMBER                	Lex:	2
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	032 --> OP_ADD                        	Lex:	+
Exiting <FACTOR>
Exiting <TERM>
Token:	018 --> LITERAL_NUMBER                	Lex:	2
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	029 --> CLOSE_PARENTESIS              	Lex:	)
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Exiting <EXP>
Token:	034 --> OP_MUL                        	Lex:	*
Exiting <FACTOR>
Token:	018 --> LITERAL_NUMBER                	Lex:	2
Entering <TERM>
Entering <FACTOR>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <FACTOR>
Exiting <TERM>
Exiting <TERM>
Exiting <EXP>
Exiting <ATTRIBUTION>
Exiting <INSTRUCTION>
Token:	011 --> IDENTIFIER                    	Lex:	a
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <ATTRIBUTION>
Token:	030 --> OP_ATTRIBUTION                	Lex:	<<
Token:	018 --> LITERAL_NUMBER                	Lex:	2
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	032 --> OP_ADD                        	Lex:	+
Exiting <FACTOR>
Exiting <TERM>
Token:	028 --> OPEN_PARENTESIS               	Lex:	(
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	018 --> LITERAL_NUMBER                	Lex:	2
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	034 --> OP_MUL                        	Lex:	*
Exiting <FACTOR>
Token:	018 --> LITERAL_NUMBER                	Lex:	2
Entering <TERM>
Entering <FACTOR>
Token:	029 --> CLOSE_PARENTESIS              	Lex:	)
Exiting <FACTOR>
Exiting <TERM>
Exiting <TERM>
Exiting <EXP>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Exiting <EXP>
Exiting <ATTRIBUTION>
Exiting <INSTRUCTION>
Token:	011 --> IDENTIFIER                    	Lex:	a
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <ATTRIBUTION>
Token:	030 --> OP_ATTRIBUTION                	Lex:	<<
Token:	028 --> OPEN_PARENTESIS               	Lex:	(
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	018 --> LITERAL_NUMBER                	Lex:	2
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	032 --> OP_ADD                        	Lex:	+
Exiting <FACTOR>
Exiting <TERM>
Token:	018 --> LITERAL_NUMBER                	Lex:	2
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	034 --> OP_MUL                        	Lex:	*
Exiting <FACTOR>
Token:	018 --> LITERAL_NUMBER                	Lex:	2
Entering <TERM>
Entering <FACTOR>
Token:	029 --> CLOSE_PARENTESIS              	Lex:	)
Exiting <FACTOR>
Exiting <TERM>
Exiting <TERM>
Exiting <EXP>
Exiting <EXP>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Exiting <ATTRIBUTION>
Exiting <INSTRUCTION>
Token:	078 --> RESERVED_ON                   	Lex:	On
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <ON>
Token:	004 --> POINT                         	Lex:	.
Token:	079 --> RESERVED_CONSOLE              	Lex:	Console
Token:	028 --> OPEN_PARENTESIS               	Lex:	(
Token:	093 --> RESERVED_CAST_STRING          	Lex:	ToString
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Entering <CASTINGVAR>
Token:	028 --> OPEN_PARENTESIS               	Lex:	(
Token:	011 --> IDENTIFIER                    	Lex:	a
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	029 --> CLOSE_PARENTESIS              	Lex:	)
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Token:	029 --> CLOSE_PARENTESIS              	Lex:	)
Exiting <CASTINGVAR>
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <ON>
Exiting <INSTRUCTION>
Token:	-01 --> EOF                           	Lex:	EOF
Exiting <INSTRUCTIONLIST>
Exiting <INSTRUCTIONLIST>
Exiting <INSTRUCTIONLIST>
Exiting <INSTRUCTIONLIST>
Exiting <INSTRUCTIONLIST>
Exiting <INSTRUCTIONLIST>

MAX_DEPTH_TREE FOUND : 16
PROGRAM
|_INSTRUCTIONLIST
  |-INSTRUCTION
  | |_DECLARATION
  |   |-N
  |   |_DECLAREEXP
  |     |-a
  |     |-<<
  |     |_EXP
  |       |_TERM
  |         |_FACTOR
  |           |_0
  |-;
  |_INSTRUCTIONLIST
    |-INSTRUCTION
    | |_ATTRIBUTION
    |   |-a
    |   |-<<
    |   |_EXP
    |     |-TERM
    |     | |_FACTOR
    |     |   |_2
    |     |-+
    |     |_EXP
    |       |_TERM
    |         |-FACTOR
    |         | |_2
    |         |-*
    |         |_TERM
    |           |_FACTOR
    |             |_2
    |-;
    |_INSTRUCTIONLIST
      |-INSTRUCTION
      | |_ATTRIBUTION
      |   |-a
      |   |-<<
      |   |_EXP
      |     |_TERM
      |       |-FACTOR
      |       | |-(
      |       | |-EXP
      |       | | |-TERM
      |       | | | |_FACTOR
      |       | | |   |_2
      |       | | |-+
      |       | | |_EXP
      |       | |   |_TERM
      |       | |     |_FACTOR
      |       | |       |_2
      |       | |_)
      |       |-*
      |       |_TERM
      |         |_FACTOR
      |           |_2
      |-;
      |_INSTRUCTIONLIST
        |-INSTRUCTION
        | |_ATTRIBUTION
        |   |-a
        |   |-<<
        |   |_EXP
        |     |-TERM
        |     | |_FACTOR
        |     |   |_2
        |     |-+
        |     |_EXP
        |       |_TERM
        |         |_FACTOR
        |           |-(
        |           |-EXP
        |           | |_TERM
        |           |   |-FACTOR
        |           |   | |_2
        |           |   |-*
        |           |   |_TERM
        |           |     |_FACTOR
        |           |       |_2
        |           |_)
        |-;
        |_INSTRUCTIONLIST
          |-INSTRUCTION
          | |_ATTRIBUTION
          |   |-a
          |   |-<<
          |   |_EXP
          |     |_TERM
          |       |_FACTOR
          |         |-(
          |         |-EXP
          |         | |-TERM
          |         | | |_FACTOR
          |         | |   |_2
          |         | |-+
          |         | |_EXP
          |         |   |_TERM
          |         |     |-FACTOR
          |         |     | |_2
          |         |     |-*
          |         |     |_TERM
          |         |       |_FACTOR
          |         |         |_2
          |         |_)
          |-;
          |_INSTRUCTIONLIST
            |-INSTRUCTION
            | |_ON
            |   |-On
            |   |-.
            |   |-Console
            |   |-(
            |   |-EXP
            |   | |_TERM
            |   |   |_FACTOR
            |   |     |_CASTINGVAR
            |   |       |-ToString
            |   |       |-(
            |   |       |-EXP
            |   |       | |_TERM
            |   |       |   |_FACTOR
            |   |       |     |_a
            |   |       |_)
            |   |_)
            |-;
            |_EOF
Entering PROGRAM
Entering INSTRUCTIONLIST
Entering INSTRUCTION
Entering DECLARATION
Entering N
Exiting N
Entering DECLAREEXP
Entering a
Exiting a
Entering <<
Exiting <<
Entering EXP
Entering TERM
Entering FACTOR
Entering 0
Exiting 0
Exiting 0
Exiting 0
Exiting 0
Exiting <<
Exiting DECLARATION
Exiting DECLARATION
Entering ;
Entering INSTRUCTIONLIST
Entering INSTRUCTION
Entering ATTRIBUTION
Entering a
Exiting a
Entering <<
Exiting <<
Entering EXP
Entering TERM
Entering FACTOR
Entering 2
Exiting 2
Exiting 2
Exiting 2
Entering +
Exiting +
Entering EXP
Entering TERM
Entering FACTOR
Entering 2
Exiting 2
Exiting 2
Entering *
Exiting *
Entering TERM
Entering FACTOR
Entering 2
Exiting 2
Exiting 2
Exiting 2
Exiting *
Exiting *
Exiting +
Exiting <<
Exiting <<
Entering ;
Entering INSTRUCTIONLIST
Entering INSTRUCTION
Entering ATTRIBUTION
Entering a
Exiting a
Entering <<
Exiting <<
Entering EXP
Entering TERM
Entering FACTOR
Entering (
Entering EXP
Entering TERM
Entering FACTOR
Entering 2
Exiting 2
Exiting 2
Exiting 2
Entering +
Exiting +
Entering EXP
Entering TERM
Entering FACTOR
Entering 2
Exiting 2
Exiting 2
Exiting 2
Exiting 2
Exiting +
Entering )
Exiting +
Entering *
Exiting *
Entering TERM
Entering FACTOR
Entering 2
Exiting 2
Exiting 2
Exiting 2
Exiting *
Exiting *
Exiting <<
Exiting <<
Entering ;
Entering INSTRUCTIONLIST
Entering INSTRUCTION
Entering ATTRIBUTION
Entering a
Exiting a
Entering <<
Exiting <<
Entering EXP
Entering TERM
Entering FACTOR
Entering 2
Exiting 2
Exiting 2
Exiting 2
Entering +
Exiting +
Entering EXP
Entering TERM
Entering FACTOR
Entering (
Entering EXP
Entering TERM
Entering FACTOR
Entering 2
Exiting 2
Exiting 2
Entering *
Exiting *
Entering TERM
Entering FACTOR
Entering 2
Exiting 2
Exiting 2
Exiting 2
Exiting *
Exiting *
Entering )
Exiting *
Exiting *
Exiting *
Exiting +
Exiting <<
Exiting <<
Entering ;
Entering INSTRUCTIONLIST
Entering INSTRUCTION
Entering ATTRIBUTION
Entering a
Exiting a
Entering <<
Exiting <<
Entering EXP
Entering TERM
Entering FACTOR
Entering (
Entering EXP
Entering TERM
Entering FACTOR
Entering 2
Exiting 2
Exiting 2
Exiting 2
Entering +
Exiting +
Entering EXP
Entering TERM
Entering FACTOR
Entering 2
Exiting 2
Exiting 2
Entering *
Exiting *
Entering TERM
Entering FACTOR
Entering 2
Exiting 2
Exiting 2
Exiting 2
Exiting *
Exiting *
Exiting +
Entering )
Exiting +
Exiting +
Exiting +
Exiting <<
Exiting <<
Entering ;
Entering INSTRUCTIONLIST
Entering INSTRUCTION
Entering ON
Entering On
Exiting On
Entering .
Entering Console
Exiting Console
Entering (
Entering EXP
Entering TERM
Entering FACTOR
Entering CASTINGVAR
Entering ToString
Exiting ToString
Entering (
Entering EXP
Entering TERM
Entering FACTOR
Entering a
Exiting a
Exiting a
Exiting a
Exiting a
Entering )
Exiting ToString
Exiting ToString
Exiting ToString
Exiting ToString
Entering )
Exiting On
Exiting On
Entering ;
Entering EOF
Exiting On
Exiting INSTRUCTIONLIST
Exiting INSTRUCTIONLIST
Exiting INSTRUCTIONLIST
Exiting INSTRUCTIONLIST
Exiting INSTRUCTIONLIST
Exiting INSTRUCTIONLIST
INSTRUCTIONLIST
|-DECLARATION
| |-N
| |_<<
|   |-a
|   |_0
|_INSTRUCTIONLIST
  |-<<
  | |-a
  | |_+
  |   |-2
  |   |_*
  |     |-2
  |     |_2
  |_INSTRUCTIONLIST
    |-<<
    | |-a
    | |_*
    |   |-+
    |   | |-2
    |   | |_2
    |   |_2
    |_INSTRUCTIONLIST
      |-<<
      | |-a
      | |_+
      |   |-2
      |   |_*
      |     |-2
      |     |_2
      |_INSTRUCTIONLIST
        |-<<
        | |-a
        | |_+
        |   |-2
        |   |_*
        |     |-2
        |     |_2
        |_On
          |-Console
          |_ToString
            |_a
Optimization of INSTRUCTIONLIST
Optimization of DECLARATION
Optimization of N
End Optimization of N
Optimization of <<
Optimization of a
End Optimization of a
Optimization of 0
End Optimization of 0
End Optimization of <<
End Optimization of DECLARATION
Optimization of INSTRUCTIONLIST
Optimization of <<
Optimization of a
End Optimization of a
Optimization of +
Optimization of 2
End Optimization of 2
Optimization of *
Optimization of 2
End Optimization of 2
Optimization of 2
End Optimization of 2
End Optimization of 4
End Optimization of 6
End Optimization of <<
Optimization of INSTRUCTIONLIST
Optimization of <<
Optimization of a
End Optimization of a
Optimization of *
Optimization of +
Optimization of 2
End Optimization of 2
Optimization of 2
End Optimization of 2
End Optimization of 4
Optimization of 2
End Optimization of 2
End Optimization of 8
End Optimization of <<
Optimization of INSTRUCTIONLIST
Optimization of <<
Optimization of a
End Optimization of a
Optimization of +
Optimization of 2
End Optimization of 2
Optimization of *
Optimization of 2
End Optimization of 2
Optimization of 2
End Optimization of 2
End Optimization of 4
End Optimization of 6
End Optimization of <<
Optimization of INSTRUCTIONLIST
Optimization of <<
Optimization of a
End Optimization of a
Optimization of +
Optimization of 2
End Optimization of 2
Optimization of *
Optimization of 2
End Optimization of 2
Optimization of 2
End Optimization of 2
End Optimization of 4
End Optimization of 6
End Optimization of <<
Optimization of On
Optimization of Console
End Optimization of Console
Optimization of ToString
Optimization of a
End Optimization of a
End Optimization of ToString
End Optimization of On
End Optimization of INSTRUCTIONLIST
End Optimization of INSTRUCTIONLIST
End Optimization of INSTRUCTIONLIST
End Optimization of INSTRUCTIONLIST
End Optimization of INSTRUCTIONLIST
INSTRUCTIONLIST
|-DECLARATION
| |-N
| |_<<
|   |-a
|   |_0
|_INSTRUCTIONLIST
  |-<<
  | |-a
  | |_6
  |_INSTRUCTIONLIST
    |-<<
    | |-a
    | |_8
    |_INSTRUCTIONLIST
      |-<<
      | |-a
      | |_6
      |_INSTRUCTIONLIST
        |-<<
        | |-a
        | |_6
        |_On
          |-Console
          |_ToString
            |_a
