
READING FROM : ..\Examples\AttributionAndWriteExample.cx
WRITING TO : ..\Examples\AttributionAndWriteExample.cx_logFile.txt

Token:	078 --> RESERVED_ON                   	Lex:	On
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <ON>
Token:	004 --> POINT                         	Lex:	.
Token:	079 --> RESERVED_CONSOLE              	Lex:	Console
Token:	028 --> OPEN_PARENTESIS               	Lex:	(
Token:	020 --> LITERAL_STRING                	Lex:	"\n\n"
Entering <BEXP>
Entering <CEXP>
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	029 --> CLOSE_PARENTESIS              	Lex:	)
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Exiting <CEXP>
Exiting <BEXP>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <ON>
Exiting <INSTRUCTION>
Token:	013 --> IDN_DECIMAL                   	Lex:	D
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <DECLARATION>
Token:	011 --> IDENTIFIER                    	Lex:	www
Entering <DECLAREEXP>
Token:	030 --> OP_ATTRIBUTION                	Lex:	<<
Token:	077 --> RESERVED_IN                   	Lex:	In
Entering <BEXP>
Entering <CEXP>
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Entering <IN>
Token:	004 --> POINT                         	Lex:	.
Token:	079 --> RESERVED_CONSOLE              	Lex:	Console
Token:	028 --> OPEN_PARENTESIS               	Lex:	(
Token:	029 --> CLOSE_PARENTESIS              	Lex:	)
Token:	004 --> POINT                         	Lex:	.
Entering <CASTIN>
Token:	094 --> RESERVED_CAST_DECIMAL         	Lex:	ToDecimal
Token:	028 --> OPEN_PARENTESIS               	Lex:	(
Token:	029 --> CLOSE_PARENTESIS              	Lex:	)
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <CASTIN>
Exiting <IN>
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Exiting <CEXP>
Exiting <BEXP>
Exiting <DECLAREEXP>
Exiting <DECLARATION>
Exiting <INSTRUCTION>
Token:	078 --> RESERVED_ON                   	Lex:	On
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <ON>
Token:	004 --> POINT                         	Lex:	.
Token:	079 --> RESERVED_CONSOLE              	Lex:	Console
Token:	028 --> OPEN_PARENTESIS               	Lex:	(
Token:	011 --> IDENTIFIER                    	Lex:	www
Entering <BEXP>
Entering <CEXP>
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	029 --> CLOSE_PARENTESIS              	Lex:	)
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Exiting <CEXP>
Exiting <BEXP>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <ON>
Exiting <INSTRUCTION>
Token:	078 --> RESERVED_ON                   	Lex:	On
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <ON>
Token:	004 --> POINT                         	Lex:	.
Token:	079 --> RESERVED_CONSOLE              	Lex:	Console
Token:	028 --> OPEN_PARENTESIS               	Lex:	(
Token:	020 --> LITERAL_STRING                	Lex:	"Finished"
Entering <BEXP>
Entering <CEXP>
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	029 --> CLOSE_PARENTESIS              	Lex:	)
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Exiting <CEXP>
Exiting <BEXP>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <ON>
Exiting <INSTRUCTION>
Token:	-01 --> EOF                           	Lex:	EOF
Exiting <INSTRUCTIONLIST>
Exiting <INSTRUCTIONLIST>
Exiting <INSTRUCTIONLIST>
Exiting <INSTRUCTIONLIST>

MAX_DEPTH_TREE FOUND : 13
PROGRAM
|_INSTRUCTIONLIST
  |-INSTRUCTION
  | |_ON
  |   |-On
  |   |-.
  |   |-Console
  |   |-(
  |   |-BEXP
  |   | |_CEXP
  |   |   |_EXP
  |   |     |_TERM
  |   |       |_FACTOR
  |   |         |_"\n\n"
  |   |_)
  |-;
  |_INSTRUCTIONLIST
    |-INSTRUCTION
    | |_DECLARATION
    |   |-D
    |   |_DECLAREEXP
    |     |-www
    |     |-<<
    |     |_BEXP
    |       |_CEXP
    |         |_EXP
    |           |_TERM
    |             |_FACTOR
    |               |_IN
    |                 |-In
    |                 |-.
    |                 |-Console
    |                 |-(
    |                 |-)
    |                 |_CASTIN
    |                   |-.
    |                   |-ToDecimal
    |                   |-(
    |                   |_)
    |-;
    |_INSTRUCTIONLIST
      |-INSTRUCTION
      | |_ON
      |   |-On
      |   |-.
      |   |-Console
      |   |-(
      |   |-BEXP
      |   | |_CEXP
      |   |   |_EXP
      |   |     |_TERM
      |   |       |_FACTOR
      |   |         |_www
      |   |_)
      |-;
      |_INSTRUCTIONLIST
        |-INSTRUCTION
        | |_ON
        |   |-On
        |   |-.
        |   |-Console
        |   |-(
        |   |-BEXP
        |   | |_CEXP
        |   |   |_EXP
        |   |     |_TERM
        |   |       |_FACTOR
        |   |         |_"Finished"
        |   |_)
        |-;
        |_EOF
Entering PROGRAM
Entering INSTRUCTIONLIST
Entering INSTRUCTION
Entering ON
Entering On
Exiting On
Entering .
Entering Console
Exiting Console
Entering (
Entering BEXP
Entering CEXP
Entering EXP
Entering TERM
Entering FACTOR
Entering "\n\n"
Exiting \n\n
Exiting \n\n
Exiting \n\n
Exiting \n\n
Exiting \n\n
Exiting \n\n
Entering )
Exiting On
Exiting On
Entering ;
Entering INSTRUCTIONLIST
Entering INSTRUCTION
Entering DECLARATION
Entering D
Exiting D
Entering DECLAREEXP
Entering www
Exiting www
Entering <<
Exiting <<
Entering BEXP
Entering CEXP
Entering EXP
Entering TERM
Entering FACTOR
Entering IN
Entering In
Exiting In
Entering .
Entering Console
Exiting Console
Entering (
Entering )
Entering CASTIN
Entering .
Entering ToDecimal
Exiting ToDecimal
Entering (
Entering )
Exiting ToDecimal
Exiting In
Exiting In
Exiting In
Exiting In
Exiting In
Exiting In
Exiting <<
Exiting DECLARATION
Exiting DECLARATION
Entering ;
Entering INSTRUCTIONLIST
Entering INSTRUCTION
Entering ON
Entering On
Exiting On
Entering .
Entering Console
Exiting Console
Entering (
Entering BEXP
Entering CEXP
Entering EXP
Entering TERM
Entering FACTOR
Entering www
Exiting www
Exiting www
Exiting www
Exiting www
Exiting www
Exiting www
Entering )
Exiting On
Exiting On
Entering ;
Entering INSTRUCTIONLIST
Entering INSTRUCTION
Entering ON
Entering On
Exiting On
Entering .
Entering Console
Exiting Console
Entering (
Entering BEXP
Entering CEXP
Entering EXP
Entering TERM
Entering FACTOR
Entering "Finished"
Exiting Finished
Exiting Finished
Exiting Finished
Exiting Finished
Exiting Finished
Exiting Finished
Entering )
Exiting On
Exiting On
Entering ;
Entering EOF
Exiting On
Exiting INSTRUCTIONLIST
Exiting INSTRUCTIONLIST
Exiting INSTRUCTIONLIST
Exiting INSTRUCTIONLIST
INSTRUCTIONLIST
|-On
| |-Console
| |_\n\n
|_INSTRUCTIONLIST
  |-DECLARATION
  | |-D
  | |_<<
  |   |-www
  |   |_In
  |     |-Console
  |     |_ToDecimal
  |_INSTRUCTIONLIST
    |-On
    | |-Console
    | |_www
    |_On
      |-Console
      |_Finished
Optimization of INSTRUCTIONLIST
Optimization of On
Optimization of Console
Optimization start Console
End Optimization of Console
Optimization of \n\n
Optimization start \n\n
End Optimization of \n\n
Optimization start On
End Optimization of On
Optimization of INSTRUCTIONLIST
Optimization of DECLARATION
Optimization of D
Optimization start D
End Optimization of D
Optimization of <<
Optimization of www
Optimization start www
End Optimization of www
Optimization of In
Optimization of Console
Optimization start Console
End Optimization of Console
Optimization of ToDecimal
Optimization start ToDecimal
End Optimization of ToDecimal
Optimization start In
End Optimization of In
Optimization start <<
End Optimization of <<
Optimization start DECLARATION
End Optimization of DECLARATION
Optimization of INSTRUCTIONLIST
Optimization of On
Optimization of Console
Optimization start Console
End Optimization of Console
Optimization of www
Optimization start www
End Optimization of www
Optimization start On
End Optimization of On
Optimization of On
Optimization of Console
Optimization start Console
End Optimization of Console
Optimization of Finished
Optimization start Finished
End Optimization of Finished
Optimization start On
End Optimization of On
Optimization start INSTRUCTIONLIST
End Optimization of INSTRUCTIONLIST
Optimization start INSTRUCTIONLIST
End Optimization of INSTRUCTIONLIST
Optimization start INSTRUCTIONLIST
End Optimization of INSTRUCTIONLIST
INSTRUCTIONLIST
|-On
| |-Console
| |_\n\n
|_INSTRUCTIONLIST
  |-DECLARATION
  | |-D
  | |_<<
  |   |-www
  |   |_In
  |     |-Console
  |     |_ToDecimal
  |_INSTRUCTIONLIST
    |-On
    | |-Console
    | |_www
    |_On
      |-Console
      |_Finished
| Symbol | Scope 	 | Name
| 1000 	 | INSTRUCTIONLIST 	 | TABLE
| 13 	 | DECLARATION 	 | www
		push t1
		push formatoutstring; push format into ESP
		call _printf; call defined function
		add esp, 8; params * 4

		push t2 ; Temporary Read
	t2 : resd 1 
		push formatindecimal; number reading
		call _scanf; call defined function
		add esp, 8; params * 4

		fld dword[t2]
		fstp dword[www]

	www : dd 0
		sub esp, 8;reserve stack for a double in stack
		mov ebx, www
		fld dword[ebx];load float
		fstp qword[esp];store double(8087 does the conversion internally)
		push formatoutdecimal; push message into ESP
		call _printf; call defined function
		add esp, 12; params * 4

		push t3
		push formatoutstring; push format into ESP
		call _printf; call defined function
		add esp, 8; params * 4

Object File Created : nasm -f win32 D:\Documents\GitHub\compilerProject\Compiler\..\Examples\AttributionAndWriteExample.asm
Exe File Created : gcc D:\Documents\GitHub\compilerProject\Compiler\..\Examples\AttributionAndWriteExample.obj -o D:\Documents\GitHub\compilerProject\Compiler\..\Examples\AttributionAndWriteExample.exe
| Symbol | Scope 	 | Name
| 1000 	 | INSTRUCTIONLIST 	 | TABLE
| 13 	 | DECLARATION 	 | www
| 17 	 | INSTRUCTIONLIST 	 | formatoutnumber
| 17 	 | INSTRUCTIONLIST 	 | formatoutdecimal
| 17 	 | INSTRUCTIONLIST 	 | formatoutchar
| 17 	 | INSTRUCTIONLIST 	 | formatoutstring
| 17 	 | INSTRUCTIONLIST 	 | formatoutbool
| 17 	 | INSTRUCTIONLIST 	 | formatinnumber
| 17 	 | INSTRUCTIONLIST 	 | formatindecimal
| 17 	 | INSTRUCTIONLIST 	 | formatinchar
| 17 	 | INSTRUCTIONLIST 	 | formatinstring
| 17 	 | INSTRUCTIONLIST 	 | formatinbool
| 17 	 | On 	 | t1
| 13 	 | In 	 | t2
| 17 	 | On 	 | t3
