
READING FROM : ..\Examples\FileReadingExample.cx
WRITING TO : ..\Examples\FileReadingExample.cx_logFile.txt

Token:	083 --> RESERVED_COMMENT              	Lex:	Comment(Read the File and write in the file)
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <INSTRUCTION>
Token:	012 --> IDN_NUMBER                    	Lex:	N
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <DECLARATION>
Token:	011 --> IDENTIFIER                    	Lex:	i
Entering <DECLAREEXP>
Token:	030 --> OP_ATTRIBUTION                	Lex:	<<
Token:	018 --> LITERAL_NUMBER                	Lex:	0
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Exiting <DECLAREEXP>
Exiting <DECLARATION>
Exiting <INSTRUCTION>
Token:	017 --> IDN_STRING                    	Lex:	S
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <DECLARATION>
Token:	026 --> OPEN_BRACKETS                 	Lex:	[
Entering <ARRAYDEF>
Token:	018 --> LITERAL_NUMBER                	Lex:	100
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	027 --> CLOSE_BRACKETS                	Lex:	]
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Token:	011 --> IDENTIFIER                    	Lex:	fileName
Exiting <ARRAYDEF>
Entering <DECLAREEXP>
Token:	030 --> OP_ATTRIBUTION                	Lex:	<<
Token:	020 --> LITERAL_STRING                	Lex:	""
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Exiting <DECLAREEXP>
Exiting <DECLARATION>
Exiting <INSTRUCTION>
Token:	075 --> RESERVED_LOOP                 	Lex:	Loop
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <LOOPER>
Token:	028 --> OPEN_PARENTESIS               	Lex:	(
Token:	077 --> RESERVED_IN                   	Lex:	In
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Entering <IN>
Token:	004 --> POINT                         	Lex:	.
Token:	096 --> RESERVED_FILE_ENDER           	Lex:	FileEnder
Token:	028 --> OPEN_PARENTESIS               	Lex:	(
Token:	011 --> IDENTIFIER                    	Lex:	fileName
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	029 --> CLOSE_PARENTESIS              	Lex:	)
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Token:	029 --> CLOSE_PARENTESIS              	Lex:	)
Exiting <IN>
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Token:	004 --> POINT                         	Lex:	.
Token:	076 --> RESERVED_DO                   	Lex:	Do
Token:	028 --> OPEN_PARENTESIS               	Lex:	(
Token:	083 --> RESERVED_COMMENT              	Lex:	Comment(Loop to end of file)
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <INSTRUCTION>
Token:	017 --> IDN_STRING                    	Lex:	S
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <DECLARATION>
Token:	026 --> OPEN_BRACKETS                 	Lex:	[
Entering <ARRAYDEF>
Token:	077 --> RESERVED_IN                   	Lex:	In
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Entering <IN>
Token:	004 --> POINT                         	Lex:	.
Token:	097 --> RESERVED_FILE_SIZE            	Lex:	FileSize
Token:	028 --> OPEN_PARENTESIS               	Lex:	(
Token:	011 --> IDENTIFIER                    	Lex:	fileName
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	008 --> COMMA                         	Lex:	,
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Token:	011 --> IDENTIFIER                    	Lex:	i
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	029 --> CLOSE_PARENTESIS              	Lex:	)
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Token:	027 --> CLOSE_BRACKETS                	Lex:	]
Exiting <IN>
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Token:	011 --> IDENTIFIER                    	Lex:	x
Exiting <ARRAYDEF>
Entering <DECLAREEXP>
Token:	030 --> OP_ATTRIBUTION                	Lex:	<<
Token:	077 --> RESERVED_IN                   	Lex:	In
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Entering <IN>
Token:	004 --> POINT                         	Lex:	.
Token:	095 --> RESERVED_FILE                 	Lex:	File
Token:	028 --> OPEN_PARENTESIS               	Lex:	(
Token:	011 --> IDENTIFIER                    	Lex:	fileName
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	008 --> COMMA                         	Lex:	,
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Token:	011 --> IDENTIFIER                    	Lex:	i
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	029 --> CLOSE_PARENTESIS              	Lex:	)
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <IN>
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Exiting <DECLAREEXP>
Exiting <DECLARATION>
Exiting <INSTRUCTION>
Token:	083 --> RESERVED_COMMENT              	Lex:	Comment(Reads a line in the file while adjusting the size of the string)
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <INSTRUCTION>
Token:	011 --> IDENTIFIER                    	Lex:	i
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <ATTRIBUTION>
Token:	030 --> OP_ATTRIBUTION                	Lex:	<<
Token:	011 --> IDENTIFIER                    	Lex:	i
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	032 --> OP_ADD                        	Lex:	+
Exiting <FACTOR>
Exiting <TERM>
Token:	018 --> LITERAL_NUMBER                	Lex:	1
Entering <TERM>
Entering <FACTOR>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Exiting <ATTRIBUTION>
Exiting <INSTRUCTION>
Token:	078 --> RESERVED_ON                   	Lex:	On
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <ON>
Token:	004 --> POINT                         	Lex:	.
Token:	079 --> RESERVED_CONSOLE              	Lex:	Console
Token:	028 --> OPEN_PARENTESIS               	Lex:	(
Token:	011 --> IDENTIFIER                    	Lex:	x
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	029 --> CLOSE_PARENTESIS              	Lex:	)
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Token:	029 --> CLOSE_PARENTESIS              	Lex:	)
Exiting <ON>
Exiting <INSTRUCTION>
ERROR: At Line 15 : SYNTAX ERROR MISSING POINT COMMA, )