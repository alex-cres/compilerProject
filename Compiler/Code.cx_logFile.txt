
READING FROM : Code.cx
WRITING TO : Code.cx_logFile.txt

Token:	013 --> IDN_DECIMAL                   	Lex:	D
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <DECLARATION>
Token:	011 --> IDENTIFIER                    	Lex:	e
Entering <DECLAREEXP>
Token:	030 --> OP_ATTRIBUTION                	Lex:	<<
Token:	019 --> LITERAL_DECIMAL               	Lex:	3.17
Entering <BEXP>
Entering <CEXP>
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Exiting <CEXP>
Exiting <BEXP>
Exiting <DECLAREEXP>
Exiting <DECLARATION>
Exiting <INSTRUCTION>
Token:	013 --> IDN_DECIMAL                   	Lex:	D
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <DECLARATION>
Token:	011 --> IDENTIFIER                    	Lex:	x
Entering <DECLAREEXP>
Token:	008 --> COMMA                         	Lex:	,
Token:	011 --> IDENTIFIER                    	Lex:	y
Entering <DECLAREEXP>
Token:	030 --> OP_ATTRIBUTION                	Lex:	<<
Token:	019 --> LITERAL_DECIMAL               	Lex:	1.0
Entering <BEXP>
Entering <CEXP>
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Exiting <CEXP>
Exiting <BEXP>
Exiting <DECLAREEXP>
Exiting <DECLAREEXP>
Exiting <DECLARATION>
Exiting <INSTRUCTION>
Token:	012 --> IDN_NUMBER                    	Lex:	N
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <DECLARATION>
Token:	011 --> IDENTIFIER                    	Lex:	a
Entering <DECLAREEXP>
Token:	030 --> OP_ATTRIBUTION                	Lex:	<<
Token:	018 --> LITERAL_NUMBER                	Lex:	2
Entering <BEXP>
Entering <CEXP>
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	032 --> OP_ADD                        	Lex:	+
Exiting <FACTOR>
Exiting <TERM>
Token:	018 --> LITERAL_NUMBER                	Lex:	2
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	032 --> OP_ADD                        	Lex:	+
Exiting <FACTOR>
Exiting <TERM>
Token:	018 --> LITERAL_NUMBER                	Lex:	2
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Exiting <EXP>
Exiting <EXP>
Exiting <CEXP>
Exiting <BEXP>
Exiting <DECLAREEXP>
Exiting <DECLARATION>
Exiting <INSTRUCTION>
Token:	075 --> RESERVED_LOOP                 	Lex:	Loop
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <LOOPER>
Token:	028 --> OPEN_PARENTESIS               	Lex:	(
Token:	018 --> LITERAL_NUMBER                	Lex:	5
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	029 --> CLOSE_PARENTESIS              	Lex:	)
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Token:	004 --> POINT                         	Lex:	.
Token:	076 --> RESERVED_DO                   	Lex:	Do
Token:	028 --> OPEN_PARENTESIS               	Lex:	(
Token:	011 --> IDENTIFIER                    	Lex:	a
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <ATTRIBUTION>
Token:	030 --> OP_ATTRIBUTION                	Lex:	<<
Token:	011 --> IDENTIFIER                    	Lex:	a
Entering <BEXP>
Entering <CEXP>
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	032 --> OP_ADD                        	Lex:	+
Exiting <FACTOR>
Exiting <TERM>
Token:	018 --> LITERAL_NUMBER                	Lex:	6
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Exiting <EXP>
Exiting <CEXP>
Exiting <BEXP>
Exiting <ATTRIBUTION>
Exiting <INSTRUCTION>
Token:	078 --> RESERVED_ON                   	Lex:	On
Entering <INSTRUCTIONLIST>
Entering <INSTRUCTION>
Entering <ON>
Token:	004 --> POINT                         	Lex:	.
Token:	079 --> RESERVED_CONSOLE              	Lex:	Console
Token:	028 --> OPEN_PARENTESIS               	Lex:	(
Token:	011 --> IDENTIFIER                    	Lex:	a
Entering <BEXP>
Entering <CEXP>
Entering <EXP>
Entering <TERM>
Entering <FACTOR>
Token:	029 --> CLOSE_PARENTESIS              	Lex:	)
Exiting <FACTOR>
Exiting <TERM>
Exiting <EXP>
Exiting <CEXP>
Exiting <BEXP>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <ON>
Exiting <INSTRUCTION>
Token:	029 --> CLOSE_PARENTESIS              	Lex:	)
Exiting <INSTRUCTIONLIST>
Exiting <INSTRUCTIONLIST>
Token:	005 --> POINT_COMMA                   	Lex:	;
Exiting <LOOPER>
Exiting <INSTRUCTION>
Token:	-01 --> EOF                           	Lex:	EOF
Exiting <INSTRUCTIONLIST>
Exiting <INSTRUCTIONLIST>
Exiting <INSTRUCTIONLIST>
Exiting <INSTRUCTIONLIST>

MAX_DEPTH_TREE FOUND : 17
PROGRAM
|_INSTRUCTIONLIST
  |-INSTRUCTION
  | |_DECLARATION
  |   |-D
  |   |_DECLAREEXP
  |     |-e
  |     |-<<
  |     |_BEXP
  |       |_CEXP
  |         |_EXP
  |           |_TERM
  |             |_FACTOR
  |               |_3.17
  |-;
  |_INSTRUCTIONLIST
    |-INSTRUCTION
    | |_DECLARATION
    |   |-D
    |   |-DECLAREEXP
    |   | |_x
    |   |-,
    |   |_DECLAREEXP
    |     |-y
    |     |-<<
    |     |_BEXP
    |       |_CEXP
    |         |_EXP
    |           |_TERM
    |             |_FACTOR
    |               |_1.0
    |-;
    |_INSTRUCTIONLIST
      |-INSTRUCTION
      | |_DECLARATION
      |   |-N
      |   |_DECLAREEXP
      |     |-a
      |     |-<<
      |     |_BEXP
      |       |_CEXP
      |         |_EXP
      |           |-TERM
      |           | |_FACTOR
      |           |   |_2
      |           |-+
      |           |_EXP
      |             |-TERM
      |             | |_FACTOR
      |             |   |_2
      |             |-+
      |             |_EXP
      |               |_TERM
      |                 |_FACTOR
      |                   |_2
      |-;
      |_INSTRUCTIONLIST
        |-INSTRUCTION
        | |_LOOPER
        |   |-Loop
        |   |-(
        |   |-EXP
        |   | |_TERM
        |   |   |_FACTOR
        |   |     |_5
        |   |-)
        |   |-.
        |   |_Do
        |     |-(
        |     |-INSTRUCTIONLIST
        |     | |-INSTRUCTION
        |     | | |_ATTRIBUTION
        |     | |   |-a
        |     | |   |-<<
        |     | |   |_BEXP
        |     | |     |_CEXP
        |     | |       |_EXP
        |     | |         |-TERM
        |     | |         | |_FACTOR
        |     | |         |   |_a
        |     | |         |-+
        |     | |         |_EXP
        |     | |           |_TERM
        |     | |             |_FACTOR
        |     | |               |_6
        |     | |-;
        |     | |_INSTRUCTIONLIST
        |     |   |-INSTRUCTION
        |     |   | |_ON
        |     |   |   |-On
        |     |   |   |-.
        |     |   |   |-Console
        |     |   |   |-(
        |     |   |   |-BEXP
        |     |   |   | |_CEXP
        |     |   |   |   |_EXP
        |     |   |   |     |_TERM
        |     |   |   |       |_FACTOR
        |     |   |   |         |_a
        |     |   |   |_)
        |     |   |_;
        |     |_)
        |-;
        |_EOF
Entering PROGRAM
Entering INSTRUCTIONLIST
Entering INSTRUCTION
Entering DECLARATION
Entering D
Exiting D
Entering DECLAREEXP
Entering e
Exiting e
Entering <<
Exiting <<
Entering BEXP
Entering CEXP
Entering EXP
Entering TERM
Entering FACTOR
Entering 3.17
Exiting 3.17
Exiting 3.17
Exiting 3.17
Exiting 3.17
Exiting 3.17
Exiting 3.17
Exiting <<
Exiting DECLARATION
Exiting DECLARATION
Entering ;
Entering INSTRUCTIONLIST
Entering INSTRUCTION
Entering DECLARATION
Entering D
Exiting D
Entering DECLAREEXP
Entering x
Exiting x
Exiting x
Entering ,
Entering DECLAREEXP
Entering y
Exiting y
Entering <<
Exiting <<
Entering BEXP
Entering CEXP
Entering EXP
Entering TERM
Entering FACTOR
Entering 1.0
Exiting 1.0
Exiting 1.0
Exiting 1.0
Exiting 1.0
Exiting 1.0
Exiting 1.0
Exiting <<
Exiting DECLARATION
Exiting DECLARATION
Entering ;
Entering INSTRUCTIONLIST
Entering INSTRUCTION
Entering DECLARATION
Entering N
Exiting N
Entering DECLAREEXP
Entering a
Exiting a
Entering <<
Exiting <<
Entering BEXP
Entering CEXP
Entering EXP
Entering TERM
Entering FACTOR
Entering 2
Exiting 2
Exiting 2
Exiting 2
Entering +
Exiting +
Entering EXP
Entering TERM
Entering FACTOR
Entering 2
Exiting 2
Exiting 2
Exiting 2
Entering +
Exiting +
Entering EXP
Entering TERM
Entering FACTOR
Entering 2
Exiting 2
Exiting 2
Exiting 2
Exiting 2
Exiting +
Exiting +
Exiting +
Exiting +
Exiting <<
Exiting DECLARATION
Exiting DECLARATION
Entering ;
Entering INSTRUCTIONLIST
Entering INSTRUCTION
Entering LOOPER
Entering Loop
Exiting Loop
Entering (
Entering EXP
Entering TERM
Entering FACTOR
Entering 5
Exiting 5
Exiting 5
Exiting 5
Exiting 5
Entering )
Entering .
Entering Do
Entering (
Entering INSTRUCTIONLIST
Entering INSTRUCTION
Entering ATTRIBUTION
Entering a
Exiting a
Entering <<
Exiting <<
Entering BEXP
Entering CEXP
Entering EXP
Entering TERM
Entering FACTOR
Entering a
Exiting a
Exiting a
Exiting a
Entering +
Exiting +
Entering EXP
Entering TERM
Entering FACTOR
Entering 6
Exiting 6
Exiting 6
Exiting 6
Exiting 6
Exiting +
Exiting +
Exiting +
Exiting <<
Exiting <<
Entering ;
Entering INSTRUCTIONLIST
Entering INSTRUCTION
Entering ON
Entering On
Exiting On
Entering .
Entering Console
Exiting Console
Entering (
Entering BEXP
Entering CEXP
Entering EXP
Entering TERM
Entering FACTOR
Entering a
Exiting a
Exiting a
Exiting a
Exiting a
Exiting a
Exiting a
Entering )
Exiting On
Exiting On
Entering ;
Exiting On
Exiting INSTRUCTIONLIST
Entering )
Exiting Do
Exiting Loop
Exiting Loop
Entering ;
Entering EOF
Exiting Loop
Exiting INSTRUCTIONLIST
Exiting INSTRUCTIONLIST
Exiting INSTRUCTIONLIST
Exiting INSTRUCTIONLIST
INSTRUCTIONLIST
|-DECLARATION
| |-D
| |_<<
|   |-e
|   |_3.17
|_INSTRUCTIONLIST
  |-DECLARATION
  | |-D
  | |-x
  | |_<<
  |   |-y
  |   |_1.0
  |_INSTRUCTIONLIST
    |-DECLARATION
    | |-N
    | |_<<
    |   |-a
    |   |_+
    |     |-2
    |     |_+
    |       |-2
    |       |_2
    |_Loop
      |-5
      |_Do
        |_INSTRUCTIONLIST
          |-<<
          | |-a
          | |_+
          |   |-a
          |   |_6
          |_On
            |-Console
            |_a
Optimization of INSTRUCTIONLIST
Optimization of DECLARATION
Optimization of D
Optimization start D
End Optimization of D
Optimization of <<
Optimization of e
Optimization start e
End Optimization of e
Optimization of 3.17
Optimization start 3.17
End Optimization of 3.17
Optimization start <<
End Optimization of <<
Optimization start DECLARATION
End Optimization of DECLARATION
Optimization of INSTRUCTIONLIST
Optimization of DECLARATION
Optimization of D
Optimization start D
End Optimization of D
Optimization of x
Optimization start x
End Optimization of x
Optimization of <<
Optimization of y
Optimization start y
End Optimization of y
Optimization of 1.0
Optimization start 1.0
End Optimization of 1.0
Optimization start <<
End Optimization of <<
Optimization start DECLARATION
End Optimization of DECLARATION
Optimization of INSTRUCTIONLIST
Optimization of DECLARATION
Optimization of N
Optimization start N
End Optimization of N
Optimization of <<
Optimization of a
Optimization start a
End Optimization of a
Optimization of +
Optimization of 2
Optimization start 2
End Optimization of 2
Optimization of +
Optimization of 2
Optimization start 2
End Optimization of 2
Optimization of 2
Optimization start 2
End Optimization of 2
Optimization start +
Optimization result 4
End Optimization of 4
Optimization start +
Optimization result 6
End Optimization of 6
Optimization start <<
End Optimization of <<
Optimization start DECLARATION
End Optimization of DECLARATION
Optimization of Loop
Optimization of 5
Optimization start 5
End Optimization of 5
Optimization of Do
Optimization of INSTRUCTIONLIST
Optimization of <<
Optimization of a
Optimization start a
End Optimization of a
Optimization of +
Optimization of a
Optimization start a
End Optimization of a
Optimization of 6
Optimization start 6
End Optimization of 6
Optimization start +
Optimization result +
End Optimization of +
Optimization start <<
End Optimization of <<
Optimization of On
Optimization of Console
Optimization start Console
End Optimization of Console
Optimization of a
Optimization start a
End Optimization of a
Optimization start On
End Optimization of On
Optimization start INSTRUCTIONLIST
End Optimization of INSTRUCTIONLIST
Optimization start Do
End Optimization of Do
Optimization start Loop
End Optimization of Loop
Optimization start INSTRUCTIONLIST
End Optimization of INSTRUCTIONLIST
Optimization start INSTRUCTIONLIST
End Optimization of INSTRUCTIONLIST
Optimization start INSTRUCTIONLIST
End Optimization of INSTRUCTIONLIST
INSTRUCTIONLIST
|-DECLARATION
| |-D
| |_<<
|   |-e
|   |_3.17
|_INSTRUCTIONLIST
  |-DECLARATION
  | |-D
  | |-x
  | |_<<
  |   |-y
  |   |_1.0
  |_INSTRUCTIONLIST
    |-DECLARATION
    | |-N
    | |_<<
    |   |-a
    |   |_6
    |_Loop
      |-5
      |_Do
        |_INSTRUCTIONLIST
          |-<<
          | |-a
          | |_+
          |   |-a
          |   |_6
          |_On
            |-Console
            |_a
| Symbol | Scope 	 | Name
| 1000 	 | INSTRUCTIONLIST 	 | TABLE
| 13 	 | DECLARATION 	 | e
| 13 	 | DECLARATION 	 | y
| 12 	 | DECLARATION 	 | a
		fld	dword[t1]; need to convert 32 - bit to 64 - bit
		fstp dword[e]

	e : dd 0.0
		fld	dword[t2]; need to convert 32 - bit to 64 - bit
		fstp dword[y]

	x : dd 0.0
	y : dd 0.0
		mov eax, 6
	a : dd 0
	l1 : dd  0
		;looper l1 begin
		mov eax, 5
		mov dword[l1],eax
		l1_looper:



		mov eax, dword[a] ; Moving Second Operand Number Var
		mov ebx, 6 ; Moving First Operand Number
		add eax, ebx ; Adding First and Second Operand Number
		mov dword[t3] , eax ;Result 

		mov eax, dword[t3]
		mov dword[a], eax

		push dword[a]
		push formatoutnumber; push message into ESP
		call _printf; call defined function
		add esp, 8; params * 4



		l1_looper_continue:


		mov eax , dword[l1]
		sub eax,1
		mov dword[l1], eax
		cmp eax, 0
		jle l1_looper_end
		jmp l1_looper
		l1_looper_end:
		;looper l1 end
Object File Created : nasm -f win32 C:\Users\Alex\Documents\GitHub\compilerProject\Compiler\Code.asm
Exe File Created : gcc C:\Users\Alex\Documents\GitHub\compilerProject\Compiler\Code.obj -o C:\Users\Alex\Documents\GitHub\compilerProject\Compiler\Code.exe
| Symbol | Scope 	 | Name
| 1000 	 | INSTRUCTIONLIST 	 | TABLE
| 13 	 | DECLARATION 	 | e
| 13 	 | DECLARATION 	 | y
| 12 	 | DECLARATION 	 | a
| 17 	 | INSTRUCTIONLIST 	 | stringFalse
| 17 	 | INSTRUCTIONLIST 	 | stringTrue
| 17 	 | INSTRUCTIONLIST 	 | formatoutnumber
| 17 	 | INSTRUCTIONLIST 	 | formatoutdecimal
| 17 	 | INSTRUCTIONLIST 	 | formatoutchar
| 17 	 | INSTRUCTIONLIST 	 | formatoutstring
| 17 	 | INSTRUCTIONLIST 	 | formatoutbool
| 17 	 | INSTRUCTIONLIST 	 | formatinnumber
| 17 	 | INSTRUCTIONLIST 	 | formatindecimal
| 17 	 | INSTRUCTIONLIST 	 | formatinchar
| 17 	 | INSTRUCTIONLIST 	 | formatinstring
| 17 	 | INSTRUCTIONLIST 	 | formatinbool
| 13 	 | << 	 | t1
| 13 	 | DECLARATION 	 | e
| 13 	 | << 	 | t2
| 13 	 | DECLARATION 	 | x
| 13 	 | DECLARATION 	 | y
| 12 	 | DECLARATION 	 | a
| 12 	 | Loop 	 | l1
| 12 	 | + 	 | t3
